#nombre de la aplicacion
spring.application.name=msvc-cursos
#puerto local por defecto
server.port=${PORT:8002}
#conexión a postgres local desde maquina local
#spring.datasource.url=jdbc:postgresql://localhost:5432/msvc_cursos
#conexión a postgres local desde container docker
#spring.datasource.url=jdbc:postgresql://host.docker.internal/msvc_cursos
#conexión a container postgres local desde container docker
#spring.datasource.url=jdbc:postgresql://postgres14:5432/msvc_cursos
#coneccion a bbdd flexibilizada
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres14:5432}/${DB_DATABASE:msvc_cursos}
#spring.datasource.username=postgres
spring.datasource.username=${DB_USERNAME:postgres}
#spring.datasource.password=sasa
spring.datasource.password=${DB_PASSWORD:sasa}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug
#Solo dijo que a veces es necesario tener esta conf. para que corra la wea
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#para prescindir de hardcorear configuraciones para conectar ambos microservicios en cliente rest (clase CursoClienteRest). La url se usa si no estamos usando kubernetes, por eso cuando comenzó la seccion de kubernetes se comentó
#msvc.usuarios.url=${USUARIOS_URL:msvc-usuarios:8001}
#estas 2 configuraciones son para que pueda buscar todos los namespace de servicios q se encuentren en kubernetes
spring.cloud.kubernetes.secrets.enable-api=true
spring.cloud.kubernetes.discovery.all-namespaces=true